/**
 * what-input - A global utility for tracking the current input method (mouse, keyboard or touch).
 * @version v5.0.5
 * @link https://github.com/ten1seven/what-input
 * @license MIT
 */
!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("whatInput",[],n):"object"==typeof exports?exports.whatInput=n():e.whatInput=n()}(this,function(){return function(e){function n(o){if(t[o])return t[o].exports;var i=t[o]={exports:{},id:o,loaded:!1};return e[o].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}var t={};return n.m=e,n.c=t,n.p="",n(0)}([function(e,n){"use strict";e.exports=function(){if("undefined"==typeof document||"undefined"==typeof window)return{ask:function(){return"initial"},element:function(){return null},ignoreKeys:function(){},registerOnChange:function(){},unRegisterOnChange:function(){}};var e=document.documentElement,n=null,t="initial",o=t,i=null,r=["input","select","textarea"],u=[],d=[16,17,18,91,93],a={keydown:"keyboard",keyup:"keyboard",mousedown:"mouse",mousemove:"mouse",MSPointerDown:"pointer",MSPointerMove:"pointer",pointerdown:"pointer",pointermove:"pointer",touchstart:"touch"},s=!1,c=!1,w={x:null,y:null},f={2:"touch",3:"touch",4:"mouse"},p=!1;try{var l=Object.defineProperty({},"passive",{get:function(){p=!0}});window.addEventListener("test",null,l)}catch(e){}var v=function(){var e=!!p&&{passive:!0};window.PointerEvent?(window.addEventListener("pointerdown",m),window.addEventListener("pointermove",y)):window.MSPointerEvent?(window.addEventListener("MSPointerDown",m),window.addEventListener("MSPointerMove",y)):(window.addEventListener("mousedown",m),window.addEventListener("mousemove",y),"ontouchstart"in window&&(window.addEventListener("touchstart",L,e),window.addEventListener("touchend",m))),window.addEventListener(b(),y,e),window.addEventListener("keydown",L),window.addEventListener("keyup",L),window.addEventListener("focusin",g),window.addEventListener("focusout",E)},m=function(e){if(!s){var n=e.which,i=a[e.type];"pointer"===i&&(i=x(e));var u="keyboard"===i&&n&&-1===d.indexOf(n)||"mouse"===i||"touch"===i;if(t!==i&&u&&(t=i,h("input")),o!==i&&u){var c=document.activeElement;c&&c.nodeName&&-1===r.indexOf(c.nodeName.toLowerCase())&&(o=i,h("intent"))}}},h=function(n){e.setAttribute("data-what"+n,"input"===n?t:o),k(n)},y=function(e){if(O(e),!s&&!c){var n=a[e.type];"pointer"===n&&(n=x(e)),o!==n&&(o=n,h("intent"))}},g=function(t){if(!t.target.nodeName)return void E();n=t.target.nodeName.toLowerCase(),e.setAttribute("data-whatelement",n),t.target.classList&&t.target.classList.length&&e.setAttribute("data-whatclasses",t.target.classList.toString().replace(" ",","))},E=function(){n=null,e.removeAttribute("data-whatelement"),e.removeAttribute("data-whatclasses")},L=function(e){m(e),window.clearTimeout(i),s=!0,i=window.setTimeout(function(){s=!1},100)},x=function(e){return"number"==typeof e.pointerType?f[e.pointerType]:"pen"===e.pointerType?"touch":e.pointerType},b=function(){return"onwheel"in document.createElement("div")?"wheel":void 0!==document.onmousewheel?"mousewheel":"DOMMouseScroll"},k=function(e){for(var n=0,i=u.length;n<i;n++)u[n].type===e&&u[n].fn.call(void 0,"input"===e?t:o)},M=function(e){for(var n=0,t=u.length;n<t;n++)if(u[n].fn===e)return n},O=function(e){w.x!==e.screenX||w.y!==e.screenY?(c=!1,w.x=e.screenX,w.y=e.screenY):c=!0};return"addEventListener"in window&&Array.prototype.indexOf&&function(){a[b()]="mouse",v(),h("input"),h("intent")}(),{ask:function(e){return"intent"===e?o:t},element:function(){return n},ignoreKeys:function(e){d=e},registerOnChange:function(e,n){u.push({fn:e,type:n||"input"})},unRegisterOnChange:function(e){var n=M(e);n&&u.splice(n,1)}}}()}])});